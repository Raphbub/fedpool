---
title: "fedpool"
subtitle: "Détection de piscines sur la base d'images aériennes"
author: "Raphaël Bubloz"
affiliation: "MA ISH - P24"
format:
  revealjs:
    slide-number: c
    embed-resources: true
    css: styles.css
---

```{r}
#| echo: false

library(leaflet)
library(leaflet.providers)
```


## Plan

Introduction

Littérature liée

Données / Méthodologie

Résultats

Conclusion


## Introduction

Avec le changement climatique, l'usage de l'eau en été devient un enjeu croissant

. . .

![Article du Temps](imgs/le_temps_grimisuat_limite_habs.png){fig-align="center" width="640"}

. . .

Les piscines (privées) sont souvent au cœur des débats

## Introduction

<br> 

Il n'y a pas de données centralisées en Suisse

<br>

Les piscines sont régies par le droit des constructions

<br>

Les données communales ne sont pas publiques (quand elles existent...)

## Introduction

Nouvelles méthodes et données à disposition

. . .

```{=html}
<iframe width="1000" height="600" src="https://www.rts.ch/info/suisse/14111261-combien-y-atil-de-piscines-privees-dans-votre-commune-notre-carte.html" title="Articles piscines RTS"></iframe>
```

## Littérature liée

<br> 

Séminaire basé sur deux "papiers"

- Un rapport sur les aspects fiscaux

- Un article sur les aspects techniques

------------------------------------------------------------------------

### _Foncier innovant_

::: {style="font-size: 65%;"}
Direction générale des Finances publiques. (2022). *L’intelligence artificielle au service de la lutte contre la fraude : Bilan de l’expérimentation « Foncier innovant »* (p. 9). https://www.impots.gouv.fr/sites/default/files/media/2_actu/home/2022/dp_foncier_innovant.pdf
:::

::: {.fragment}
<br>

Après une expérimentation dans 9 départements, plus de 20'000 piscines non déclarées ont été détectées

Recettes fiscales estimées à 10M € supplémentaires dans ces départements
:::

------------------------------------------------------------------------

### _Foncier innovant_

Le projet a coûté 24M € sur 3 ans et devrait rapporter 40M € en une année pour la France (métropolitaine)

<br>

Peu de détails techniques si ce n'est que l'administration est accompagnée dans la mise en place, mais qu'elle garde la propriété intellectuelle des modèles

<br>

Utilisation uniquement des images aériennes publiques de l'IGN (sur un _cloud_)

------------------------------------------------------------------------

### _Foncier innovant_

![Exemple de piscine détectée en France](imgs/dp_foncier_innovant.png){fig-align="center" width="740"}


------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

::: {style="font-size: 75%;"}
Sánchez San Blas, H., Carmona Balea, A., Sales Mendes, A., Silva, L. A., & Villarrubia González, G. (2023). A Platform for Swimming Pool Detection and Legal Verification Using a Multi-Agent System and Remote Image Sensing. *International Journal of Interactive Multimedia and Artificial Intelligence, 8*(4), 153. <https://doi.org/10.9781/ijimai.2023.01.002>
:::

<br>

::: {.fragment}
Améliorer un processus manuel (!) afin de détecter le 20% de piscines en Espagne qui ne seraient pas déclarées
:::

<br>

::: {.fragment}
Comparaison de différentes sources et architectures de modèles
:::

------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

:::: columns
::: {.column width="50%"}
```{r}
#| echo: false
#| fig-width: 4.5
#| fig-height: 6

leaflet() |>
  setView(6.57208, 46.51550, 18) |> 
  addProviderTiles("OpenStreetMap.Mapnik", group = "OSM") |> 
  addProviderTiles("Esri.WorldImagery", group = "ESRI World") |> 
  addProviderTiles("NASAGIBS.ModisTerraTrueColorCR", group = "NASA GIBS") |> 
  addProviderTiles("Stadia.StamenTonerLite", group = "Stamen Lite") |>
  addLayersControl(
    baseGroups = c("OSM", "ESRI World", "NASA GIBS", "Stamen Lite")
  )
```
:::

::: {.column width="50%"}
![Google maps](imgs/google_maps.png){fig-align="center" width="240"}

![Set d'entraînement (Planet?)](imgs/valid_104672_png.rf.005f8d1bed96933b12c81f5553fb48a3.jpg){fig-align="center" width="240"}
:::

::::

------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

<br>

Comparaison de 3 modèles de détection :

- YOLOv4 (You Only Look Once)

- Mask R-CNN (Mask Region-Based Convolutional Neural Network)

- Detectron2

<br>

YOLO obtient les meilleurs résultats dans le cas d'usage

------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

<br>

`YOLO` est une architecture visant à accomplir de la détection d'image

<br>

Cela consiste à identifier l'emplacement des "objets" **et** à leur attribuer une classe

::: {.fragment}
<br>
`YOLO` est un _single-stage object detector_, les objets et classes sont attribués pour l'image entière, elle ne passe donc qu'une fois dans le modèle
:::

------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

![Exemple du workflow YOLO (Sánchez San Blas et al., 2023)](imgs/ex_workflow_yolo.png)
 
------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

<br> 

La tâche à effectuer est de la détection de classe unique (piscine)
 
<br>

Le jeu de données d'entraînement est composé de 999 images (799 _train_ | 200 _test_) contenant 2300 piscines (1892 | 408)


------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

#### Métriques d'évaluation

Précision = $\frac{TP}{TP + FP}$

Recall = $\frac{TP}{TP + FN}$

F1 = $2 \cdot \frac{\text{Precision} \cdot \text{Recall}}{\text{Precision} + \text{Recall}}$

La vitesse en FPS

L'_Intersection over Union_ (IoU) (chevauchement des _bounding boxes_ / la surface de leur union)

La _mean average precision_ (mAP) (courbe de précision et recall en fonction de la confiance dans la détection)

------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_


![Calcul d'IoU (https://pyimagesearch.com, 2016)](imgs/IoU_PyImageSearch.png){fig-align="center" width="540"}


------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

```{=html}
<iframe width="1000" height="600" src="https://blog.roboflow.com/mean-average-precision/#the-map-formula-how-to-calculate-map" title="Calcul mAP"></iframe>
```


------------------------------------------------------------------------

### _Platform for Swimming Pool Detection_

Le reste de l'article contient la description du système dans lequel s'intègre la détection

::: {.fragment}
Les conclusions sont que le modèle YOLOv4 est le plus approprié et que des ajustements peuvent être faits selon l'objectif à atteindre

<br>

Monter le seuil de confiance à 25% au lieu de 10% pour améliorer la précision et utiliser des images plus précises malgré le temps de calcul plus important
:::

# fedpool

## Données

<br>

[swissIMAGE 10cm](https://www.swisstopo.admin.ch/fr/orthophotos-swissimage-10-cm) de swisstopo

<br>

Orthophotos pour toute la Suisse, images de 1$km^{2}$

<br>

2 résolutions : 0.1 (~ 55 Mo/img, 2.4To en tout) et 2 mètres

## Données

![Extrait de Plan-les-Ouates, 0.1m, © swisstopo](imgs/24980-11140.jpg)

------------------------------------------------------------------------

## Méthodologie

<br>

**Objectif** : Réaliser, en local, un pipeline permettant d'automatiser la récupération d'images, la détection de piscines et l'affichage du résultat sur une carte interactive

::: {.fragment}
<br>

Profiter de l'entraînement du modèle pour télécharger et pré-traiter les images de façon réutilisable
:::

------------------------------------------------------------------------

### Téléchargement des images

<br>

Via l'API Spatial Temporal Asset Catalog (STAC) de swisstopo

<br>

Téléchargement en indiquant une bounding box en coordonnées WGS84 (lat/long)

<br>

Données volumineuses --> Identifier des zones d'intérêt

------------------------------------------------------------------------

### Identification des zones d'intérêt

<br> 

Quelques hypothèses sur la localisation des piscines :

- Dans des zones avec densité de logements $< 3000 / km^{2}$

- En dessous de 1'000 mètres d'altitude

::: {.fragment}
- Cibler les communes avec le plus de piscines
:::

::: {.fragment}
- CAH pour faire des clusters de $km^{2}$ identifiés adjacents
:::

------------------------------------------------------------------------

### Préparation des images

<br>

Conserver l'information spatiale en nommant selon les coordonnées (suisses) `EEEE-NNNN.tif`

<br>

Redécoupage en image de 1'000x1'000 pixels (100x100 mètres) `EEEEE-NNNNN.tif`

<br>

Conversion de (geo)tiff à jpeg `EEEEE-NNNNN.jpg`

------------------------------------------------------------------------

### Labellisation des images

<br>

À l'aide de [Label Studio](https://labelstud.io/) (en local), 300 images labellisées manuellement

<br>

Annotation au "format YOLO"

```json
[
 {class, x, y, width, height},
 {0, 0.25, 0.56, 0.2, 0.4}
]
```

<br>

Les images et les annotations ont le même nom (extensions _.jpg_ et _.txt_)

------------------------------------------------------------------------

![Exemple d'annotation au format YOLO](imgs/yolo_format_ultralytics.jpg)

------------------------------------------------------------------------


![Exemple d'annotation du projet](imgs/annotation_maison.png)

------------------------------------------------------------------------

### Architecture(s) YOLO en bref

<br>

Depuis la v5, YOLO vient avec différentes tailles de modèles (n, s, m, l, x)...et différentes versions (ex. YOLOv5 v6.0)

<br>

::: {.fragment}
En **très** résumé, l'architecture est composée de l'ossature (_backbone_) et de la tête (_head_)

Le _backbone_ prend en entrée l'image et en extrait la _feature map_

La _head_ utilise les _features maps_ pour faire les détections finales (bbox, classes, scores)
:::

------------------------------------------------------------------------

```{=html}
<iframe width="1000" height="600" src="https://github.com/ultralytics/yolov5/issues/280" title="Architecture YOLO"></iframe>
```

------------------------------------------------------------------------

### Post-traitement

<br>

Conversion des bounding boxes en une couche de polygones

<br>

Chargement des polygones dans une carte leaflet


## Résultats

::: {.fragment style="font-size: 150%;"}
❌  Étape d'entraînement (`pytorch`)
:::

::: {.fragment style="font-size: 150%;"}
<br>

Premier entraînement non échoué hier soir...mais présentation à terminer
:::

------------------------------------------------------------------------

![Mes attentes | En vrai, un batch de validation](imgs/val_batch0_labels.jpg)

------------------------------------------------------------------------

![La réalité | Prédictions effectives du même batch](imgs/val_batch0_pred.jpg)

------------------------------------------------------------------------

### Difficultés avec le modèle

<br>

Une trentaine d'hyperparamètres ajustables

<br>

_Data augmentation_ par défaut

<br>

Quelle architecture est la plus adaptée ?


------------------------------------------------------------------------

![Data augmentation par défaut | Batch de train](imgs/train_batch1.jpg)

------------------------------------------------------------------------

### Difficultés pour la suite

#### Variance intra-classe

À quoi ressemblent les piscines sur les images ?


:::: {.columns style="text-align: center"}

::: {.column width="20%"}
!["Normale"](imgs/ex_piscine_ouverte.png)
:::

::: {.column width="25%"}
![Bâchée](imgs/ex_piscine_bachee.png)
:::

::: {.column width="25%"}
![Couverte](imgs/ex_piscine_couverte.png)
:::

::: {.column width="25%"}
![Verte](imgs/ex_piscine_verte.png)
:::

::::

------------------------------------------------------------------------

### Difficultés pour la suite

#### Piscine sur plusieurs images

<br>

Identifier les _bounding boxes_ adjacentes à un bord 

<br>

Identifier quelle image vient à la suite et ses bbox

<br>

Définir un seuil au-delà duquel joindre les _bbox_ en un seul polygone


## Conclusion

::: {style="font-size: 115%;"}
<br>

Introduction au traitement d'images


Beaucoup de difficultés...mais beaucoup de leçons apprises


Commencer par le modèle aurait été plus judicieux

[https://github.com/Raphbub/fedpool](https://github.com/Raphbub/fedpool)
:::

